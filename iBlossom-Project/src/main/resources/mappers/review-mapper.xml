<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="reviewMapper">

 <resultMap id="reviewResultSet" type="review">
      <result column="REVIEW_NO" property="reviewNo" />
      <result column="REVIEW_TITLE" property="reviewTitle" />
      <result column="REVIEW_CONTENT" property="reviewContent" />
      <result column="REVIEW_PHOTO" property="reviewPhoto" />
      <result column="CREATE_DATE" property="createDate" />
      <result column="REVIEW_STATUS" property="reviewStatus" />
      <result column="USER_NO" property="userNo" />
      <result column="PRODUCT_NO" property="productNo" />
      <result column="USER_ID" property="userId"/>
      <result column="FLOWER_NAME" property="flowerName"/>
   </resultMap>
   
   <!-- 게시글 총 개수 -->
   	<select id="selectListCount" resultType="_int">
      SELECT COUNT(*)
   		FROM
   		FLOWER_REVIEW
   		WHERE REVIEW_STATUS = 'Y'
   	</select> 
   
    <!-- 리뷰 전체보기(admin) -->
     <select id="selectReviewList" resultMap="reviewResultSet">
      SELECT REVIEW_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_PHOTO, CREATE_DATE, REVIEW_STATUS, USER_ID, FLOWER_NAME
      FROM FLOWER_REVIEW F INNER JOIN MEMBER M
      ON F.USER_NO = M.USER_NO
        INNER JOIN PRODUCT P
      ON F.PRODUCT_NO = P.PRODUCT_NO
       WHERE REVIEW_STATUS='Y'
       ORDER BY CREATE_DATE DESC
     </select>

	<!-- 리뷰 작성하기 -->
   <insert id="insertReview" parameterType="review">
        INSERT INTO FLOWER_REVIEW(REVIEW_NO
                         , REVIEW_TITLE
                         , REVIEW_CONTENT
                         , REVIEW_PHOTO
                         , USER_NO
                         , PRODUCT_NO)
      VALUES(SEQ_RNO.NEXTVAL
           , #{reviewTitle}
           , #{reviewContent}
           , #{reviewPhoto}
           , #{userNo}
           , #{productNo})
     </insert>
     
 
     
     <!-- 리뷰 삭제하기 -->
     <update id="deleteReview" parameterType="_int">
     	UPDATE FLOWER_REVIEW
     	SET REVIEW_STATUS = 'N'
     	WHERE REVIEW_NO = #{reviewNo}
     </update> 
     
     <!-- 리뷰 수정하기 -->
     	<update id="updateReview" parameterType="product">
		UPDATE FLOWER_REVIEW
		SET REVIEW_TITLE = #{reviewTitle}
			, REVIEW_CONTENT = #{flowerName}
			, REVIEW_PHOTO = 'path'
		WHERE REVIEW_NO = #{reviewNo}
	</update>
	
	<!-- 리뷰 띄우기 -->
<select id="reviewSelectList" resultMap="reviewResultSet">
   SELECT REVIEW_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_PHOTO, 
   TO_CHAR(CREATE_DATE,'YYYY-MM-DD')"CREATE_DATE", USER_ID
      FROM FLOWER_REVIEW F INNER JOIN MEMBER M
      ON F.USER_NO = M.USER_NO
       INNER JOIN PRODUCT P
      ON F.PRODUCT_NO = P.PRODUCT_NO
       WHERE F.PRODUCT_NO = #{productNo}
       AND REVIEW_STATUS='Y'
      ORDER BY CREATE_DATE DESC
     </select>
     
     
     <!-- 리뷰 상세보기(admin)--> <!-- 한솔 추가 -->
	<select id="selectReview" parameterType="_int"
		resultMap="reviewResultSet">
        SELECT REVIEW_NO,
		REVIEW_TITLE, REVIEW_CONTENT, CREATE_DATE, USER_ID, REVIEW_PHOTO, R.PRODUCT_NO, FLOWER_NAME
        FROM FLOWER_REVIEW R
        JOIN MEMBER USING(USER_NO)
        JOIN PRODUCT P ON (R.PRODUCT_NO = P.PRODUCT_NO)
		WHERE REVIEW_NO = #{reviewNo}
	</select>
	
	<!--  원본
	<select id="selectReview" parameterType="_int"
		resultMap="reviewResultSet">
        SELECT REVIEW_NO,
		REVIEW_TITLE, REVIEW_CONTENT, CREATE_DATE , USER_ID , REVIEW_PHOTO
        FROM FLOWER_REVIEW
        JOIN MEMBER USING(USER_NO)
		WHERE REVIEW_NO = #{reviewNo}
	</select>
	 -->
	
	<select id="selectMyReview" parameterType="_int" resultMap="reviewResultSet">
		SELECT REVIEW_NO, REVIEW_TITLE, REVIEW_CONTENT, CREATE_DATE, REVIEW_PHOTO, FLOWER_NAME
        FROM FLOWER_REVIEW R
        JOIN PRODUCT P ON (R.PRODUCT_NO = P.PRODUCT_NO)
        WHERE USER_NO = #{userNo}
          AND REVIEW_STATUS = 'Y'
	</select>

</mapper>
