<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="memberMapper">

	<resultMap id="memberResultSet" type="member">
		<result column="USER_NO" property="userNo"/>
		<result column="USER_ID" property="userId"/>
		<result column="USER_PWD" property="userPwd"/>
		<result column="USER_NAME" property="userName"/>
		<result column="PHONE" property="phone"/>
		<result column="EMAIL" property="email"/>
		<result column="ADDRESS1" property="address1"/>
		<result column="ADDRESS2" property="address2"/>
		<result column="ADDRESS" property="address"/>
		<result column="POSTCODE" property="postcode"/>
		<result column="ENROLL_DATE" property="enrollDate"/>
		<result column="STATUS" property="status"/>
		<result column="PURCHASE" property="purchase"/>
		<result column="GR_LEVEL" property="grLevel"/>
	</resultMap>

	<select id="countUserId" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE USER_ID = #{userId}
	</select>


	<insert id="insertMember" parameterType="member">
		INSERT INTO MEMBER (USER_NO,
		                    USER_ID,
		                    USER_PWD,
		                    USER_NAME,
		                    EMAIL
		                    )
		VALUES (SEQ_UNO.NEXTVAL,
		        #{userId},
		        #{userPwd},
		        #{userName},
		        #{email}
		        )
	</insert>
	
	<!-- 로그인 -->
	<select id="loginMember" resultMap="memberResultSet" parameterType="member">
		SELECT USER_NO, USER_ID, USER_PWD, USER_NAME, PHONE, EMAIL, ADDRESS1, ADDRESS2, ADDRESS, 
			   POSTCODE, TO_CHAR(ENROLL_DATE, 'YYYY-MM-DD') "ENROLL_DATE", STATUS, PURCHASE, GR_LEVEL 
		FROM MEMBER
		WHERE USER_ID = #{userId}
		  AND STATUS = 'Y'
	</select>

	<!-- 회원 리스트 총 인원 조회 -->
	   <select id="selectListCount" resultType="_int">
      SELECT COUNT(*)
      FROM MEMBER
      WHERE STATUS = 'Y'
   </select>

	<!-- 회원 리스트 조회 -->
     <select id="selectList" resultMap="memberResultSet">
       SELECT USER_NO, USER_ID, USER_NAME, PHONE, EMAIL, ADDRESS, POSTCODE,
             TO_CHAR(ENROLL_DATE, 'YYYY-MM-DD') "ENROLL_DATE", STATUS, PURCHASE, GR_LEVEL
      FROM MEMBER
      WHERE STATUS = 'Y'
      ORDER BY USER_NO ASC
     </select>

	<!-- 프로필 수정 -->
	<update id="updateMember" parameterType="member">
		UPDATE MEMBER
		   SET USER_NAME = #{userName},
		   	   USER_PWD = #{userPwd},
		   	   PHONE = #{phone},
		   	   POSTCODE = #{postcode},
		   	   ADDRESS1 = #{address1},
		   	   ADDRESS2 = #{address2},
		   	   ADDRESS = #{address}
		WHERE USER_NO = #{userNo}
		  AND STATUS = 'Y'
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="deleteMember" parameterType="_int">
		UPDATE MEMBER
		   SET STATUS = 'N'
		 WHERE USER_NO = #{userNo}
	</update>
	
	 <select id="selectEmail" resultType="String">
       SELECT EMAIL
      FROM MEMBER
      WHERE USER_ID = #{userId}
     </select>
     
     <select id="selectId" resultType="String">
      SELECT USER_ID
      FROM MEMBER
      WHERE EMAIL = #{email}
     </select>
     
	<!-- 비밀번호 변경 -->
	<update id="updatePwd" parameterType="member">
		UPDATE MEMBER SET USER_PWD = #{userPw} WHERE USER_ID = #{userId}
	</update>
</mapper>
